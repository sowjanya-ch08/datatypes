Promise:
 A promise is a special js object thet represents the eventual completion(or failure) of an asyncronus operation
A promise
It allows to handle asynchronous tasks more
Exp:

1)	To create a – new promise

Two parameters
Resolve – to mark the primise as successfully
Reject – mark it as failed
2)handling the result:
.then() method is called when promise is fulfilled
It will receives the result from resolve()
.catch() method is called if the promise is rejected it receives the error message from reject()

Changing promises:
Ex:
<script>
                let promise = new Promise((resolve, reject) => {
                    resolve(5);
                });
                
                promise
                    .then((result) => {
                        console.log(result); 
                        return result * 2;   
                    })
                    .then((result) => {
                        console.log(result); 
                        return result + 3;   
                    })
                    .then((result) => {
                        console.log(result); 
                    })
                    .catch((error) => {
                        console.log("error", error);
                    });
            </script>
                            promise
                    .then((result) => {
                        console.log(result); // Logs 5
                        return new Promise((resolve) => {
                            setTimeout(() => {
                                console.log("Delayed:", result); // Logs "Delayed: 5" after 5 seconds
                                resolve(result * 2); // Resolves with 10
                            }, 5000);
                        });
                    })
                    .then((result) => {
                        console.log(result); // Logs 10
                        return new Promise((resolve) => {
                            setTimeout(() => {
                                console.log("Delayed:", result); // Logs "Delayed: 10" after 5 seconds
                                resolve(result + 3); // Resolves with 13
                            }, 5000);
                        });
                    })
                    .then((result) => {
                        console.log(result); // Logs 13
                    })
                    .catch((error) => {
                        console.log("error", error);
                    });
            
                
            </script>

