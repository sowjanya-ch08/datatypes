javasciript XML is a Syntax extension for JS
it allows us to write HTML code in React

The JSX code gets complied into JS
Babel: A tool converts HTML CODE in JS
--all the
<body>
    <div id="app"></div>
    <script type="text/babel">
        const element = <h1 className="a">HELLO, JSX</h1>;
        const e = document.getElementById('app');
        const root = ReactDOM.createRoot(e);
        root.render(element);
    </script>
</body>
 <!-- <div id="app"></div>

    <script type="text/babel">
        const element = <h1 className="a">HELLO, JSX</h1>;

        const e = document.getElementById('app');
        const root = ReactDOM.createRoot(e);
        root.render(element);
    </script> -->
    <!-- <div id="app"></div>
    <script type="text/babel">
    const n = 10;
    const m = <h1>React  is {n*2} times better than jsx</h1>
    const r=ReactDOM.createRoot(document.getElementById('app'))
    r.render(m);
    </script> -->
<!-- <div id="app"></div>
<script type="text/babel">
    const App = () => {
        const isLoggedIn = true;
        return (
            <div>
                {isLoggedIn ? (<h1>Welcome back, user!</h1>) : (<h1>Please log in</h1>)}
                {isLoggedIn && <h1>You have a new notification</h1>}
            </div>
        );
    };
    const element = document.getElementById('app');
    const root = ReactDOM.createRoot(element);
    root.render(<App />);
</script> -->
<div id="app"></div>
<script type="text/babel">
    const App = () => {
        const isLoggedIn = false;
        return (
            <div>
                {isLoggedIn ? (<h1>Welcome back, user!</h1>) : (<h1>Please log in</h1>)}
                {isLoggedIn && <h1>You have a new notification</h1>}
            </div>
        );
    };
    const element = document.getElementById('app');
    const root = ReactDOM.createRoot(element);
    root.render(<App />);
</script>



Without JSX
